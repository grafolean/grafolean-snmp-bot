name: Deploy to Docker Hub

on:
  release:
    types: [published]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout source code
      uses: actions/checkout@v1

    # - name: Set up QEMU for more platforms
    #   uses: docker/setup-qemu-action@v1
    #   with:
    #     platforms: amd64,arm

    # - name: Set docker build as alias to buildx (multiarch build)
    #   uses: docker/setup-buildx-action@v1
    #   id: buildx
    #   # with:
    #   #   install: true

    - name: Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Deploy to Docker Hub - ARMv7
      if: success() && startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_REF_TAG: ${{ github.ref }}
        DOCKER_REGISTRY: docker.io
        DOCKER_IMAGE: grafolean/grafolean-snmp-bot
        DOCKER_USER: grafolean
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        BUILD_PLATFORMS: linux/arm/v7
      run: |
        echo "Available plaftorms: ${{ steps.buildx.outputs.platforms }}"
        echo "Building for plaftorms: $BUILD_PLATFORMS"
        export VERSION=${GITHUB_REF_TAG:10:50}
        echo "Version is $VERSION"
        export LAST_KNOWN_VERSION=`git tag -l --sort=-version:refname "v*.*.*" | grep -v rc | head -n 1 | tr -d '[:space:]'`
        echo "Last known version is $LAST_KNOWN_VERSION"
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
        docker buildx build --platform "$BUILD_PLATFORMS" -t "docker.io/$DOCKER_IMAGE:$VERSION" -t "docker.io/$DOCKER_IMAGE:latest" --build-arg VERSION=$VERSION --build-arg VCS_REF=$GITHUB_SHA --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') .
        [ "$LAST_KNOWN_VERSION" == "$VERSION" ] && docker tag "docker.io/$DOCKER_IMAGE:$VERSION" "docker.io/$DOCKER_IMAGE:latest" || echo "NOT MARKING AS LATEST!"
        docker images
        docker push "docker.io/$DOCKER_IMAGE:$VERSION"
        [ "$LAST_KNOWN_VERSION" == "$VERSION" ] && docker push "docker.io/$DOCKER_IMAGE:latest" || echo "NOT LATEST!"
